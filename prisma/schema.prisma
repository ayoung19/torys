// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  accountId String @id

  daysEdited Day[]

  isActive Boolean
  phoneNumber String
  accountType AccountType
}

enum AccountType {
  DEV
  ADMIN
  COORDINATOR
  FOREMAN
}

model Timesheet {
  timesheetId String @id

  employees Employee[]
  jobs Job[]
}

model Employee {
  timesheetId String
  timesheet Timesheet @relation(fields: [timesheetId], references: [timesheetId])
  employeeId String @default(uuid())
  @@id(fields: [timesheetId, employeeId], name: "employeePrimaryKey")

  entries Entry[]

  isActive Boolean
  displayId String
  name String
  phoneNumber String
  rateResidentialCentsPerHour Int
  rateCommercialCentsPerHour Int
  rateDavisBaconCentsPerHour Int
  rateDavisBaconOvertimeCentsPerHour Int
  rateDriveTimeCentsPerHour Int
}

model Job {
  timesheetId String
  timesheet Timesheet @relation(fields: [timesheetId], references: [timesheetId])
  jobId String @default(uuid())
  @@id(fields: [timesheetId, jobId], name: "jobPrimaryKey")

  days Day[]

  isActive Boolean
  name String
  budgetOriginalCents Int?
  budgetCurrentCents Int?
  rateType RateType
  overtimeType OvertimeType
}


enum RateType {
  RESIDENTIAL
  COMMERCIAL
  DAVIS_BACON
  DRIVE_TIME
}

enum OvertimeType {
  DAILY
  WEEKLY
}

model Day {
  timesheetId String
  jobId String
  job Job @relation(fields: [timesheetId, jobId], references: [timesheetId, jobId])
  dayId Int
  @@id(fields: [timesheetId, jobId, dayId], name: "dayPrimaryKey")

  editor Account? @relation(fields: [editorId], references: [accountId])
  editorId String?

  entries Entry[]

  description String
}

model Entry {
  timesheetId String
  jobId String
  dayId Int
  day Day @relation(fields: [timesheetId, jobId, dayId], references: [timesheetId, jobId, dayId])
  entryId String @default(uuid())
  @@id(fields: [timesheetId, jobId, dayId, entryId], name: "entryPrimaryKey")

  employee Employee @relation(fields: [timesheetId, employeeId], references: [timesheetId, employeeId])
  employeeId String

  // Approved by admin and counted in timesheet.
  isValid Boolean
  // Confirmed by employee the entry is for.
  isConfirmed Boolean

  timeInSeconds Int
  timeOutSeconds Int
  lunchSeconds Int
  entryType EntryType
}

enum EntryType {
  ROOFING
  CARPENTRY
}
